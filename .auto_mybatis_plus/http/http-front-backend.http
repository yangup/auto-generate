
### 1. 通过 api 获得 http 还款链接
< {%
    const requestBody = JSON.parse(request.body.tryGetSubstituted());
    delete requestBody.sign;
    const secretKey = "secretKey";
    const filteredData = Object.fromEntries(
        Object.entries(requestBody).filter(([key, value]) => value !== "")
    );
    const sortedKeys = Object.keys(filteredData).sort();
    const stringA = sortedKeys.map(key => `${key}=${filteredData[key]}`).join("&");
    const stringB = stringA + secretKey;
    const sign = crypto.md5().updateWithText(stringB).digest().toHex();
    request.variables.set("sign", sign);
    request.variables.set("__amount", requestBody.amount);
    client.global.set("__accessKey", "accessKey");
    client.global.set("__secretKey", secretKey);
%}
POST {{host}}/backend/depositeMerchant/add
Content-Type: application/json

{
  "accessKey": "{{__accessKey}}",
  "transactionId": "{{$random.uuid}}",
  "method": "QR_PAY",
  "callbackUrl": "http://dev.ksmdev.top:11011/",
  "amount": 108,
  "sign": "{{sign}}"
}

> {%
    // 获取 qrCode 字段的值
    let qrCode = response.body.data.qrCode;
    // 分割出 id 和 sign 参数
    let urlParams = qrCode.split("?")[1].split("&");  // 分割出 id 和 sign
    let id = urlParams[0].substring(3);  // 提取 id（去掉 "id=" 前缀）
    let sign = urlParams[1].substring(5);  // 提取 sign（去掉 "sign=" 前缀）
    // 将 id 和 sign 存储到全局变量
    client.global.set("__id", id);
    client.global.set("__sign_url", sign);
%}


### 2. h5 页面 提交 银行卡信息
< {%
    const bankCodes = ["AAA", "BBB", "CCC", "DDD"];
    const cardNos = ["AA111111", "BB22222", "CC33333", "444442261"];
    // let r = Math.random()
    // console.log(r)
    // let r = 0.16846152847170537
    let r = 0.9
    request.variables.set("__bankCode", bankCodes[Math.floor(r * bankCodes.length)]);
    request.variables.set("__cardNo", cardNos[Math.floor(r * cardNos.length)]);
%}

POST {{host}}/backend/depositeMerchant/addBank
Content-Type: application/json

{
  "id": "{{__id}}",
  "sign": "{{__sign_url}}",
  "cardNo": "{{__cardNo}}"
}

> {%
    let expireTimeReal = response.body.data.expireTimeReal;
    // 将字符串转换为 Date 对象
    let dateParts = expireTimeReal.split(" ");
    let datePart = dateParts[0].split("-");
    let timePart = dateParts[1].split(":");
    let expireDate = new Date(
        datePart[0], datePart[1] - 1, datePart[2], // 年、月、日
        timePart[0], timePart[1], timePart[2]      // 时、分、秒
    );
    // 减少 1 分钟（60000 毫秒）
    expireDate.setMinutes(expireDate.getMinutes() - 1);
    // 格式化回 yyyy-MM-dd HH:mm:ss
    let formattedExpireTime = expireDate.getFullYear() + "-" +
        String(expireDate.getMonth() + 1).padStart(2, '0') + "-" +
        String(expireDate.getDate()).padStart(2, '0') + " " +
        String(expireDate.getHours()).padStart(2, '0') + ":" +
        String(expireDate.getMinutes()).padStart(2, '0') + ":" +
        String(expireDate.getSeconds()).padStart(2, '0');
    // 存入全局变量
    client.global.set("__expireTimeReal", formattedExpireTime);
    client.global.set("__depositeBankCode", response.body.data.depositeBankCode);
    client.global.set("__depositeCardNo", response.body.data.depositeCardNo);
    client.global.set("__billAmount", response.body.data.billAmount);
    client.global.set("__bankCode", response.body.data.bankCode);
    client.global.set("__cardNoSuffix", response.body.data.cardNo.slice(-4));
%}
