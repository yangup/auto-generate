{
    "id": "id",
    "icon": "icon",
    "name": "name",
    "url": "url",
    "status": "status",
    "type": "type",
    "parentId": "parentId",
    "sort": "sort",
    "createTime": "createTime",
    "updateTime": "updateTime"
}


@RequestParam(name = "id", required = false) String id,
@RequestParam(name = "icon", required = false) String icon,
@RequestParam(name = "name", required = false) String name,
@RequestParam(name = "url", required = false) String url,
@RequestParam(name = "status", required = false) String status,
@RequestParam(name = "type", required = false) String type,
@RequestParam(name = "parentId", required = false) String parentId,
@RequestParam(name = "sort", required = false) Long sort,
@RequestParam(name = "createTime", required = false) LocalDateTime createTime,
@RequestParam(name = "updateTime", required = false) LocalDateTime updateTime


{
    title: 'id',
    key: 'id',
},{
    title: 'icon',
    key: 'icon',
},{
    title: '显示的名字',
    key: 'name',
},{
    title: '前端url',
    key: 'url',
},{
    title: '状态,打开或者关闭',
    key: 'status',
},{
    title: '类型, 有链接的,无链接的',
    key: 'type',
},{
    title: '父 id',
    key: 'parentId',
},{
    title: '排序字段',
    key: 'sort',
},{
    title: '产生时间',
    key: 'createTime',
},{
    title: '更新时间',
    key: 'updateTime',
}


{
    title: 'id',
    width: 100,
    key: 'id',
},{
    title: 'icon',
    width: 100,
    key: 'icon',
},{
    title: '显示的名字',
    width: 100,
    key: 'name',
},{
    title: '前端url',
    width: 100,
    key: 'url',
},{
    title: '状态,打开或者关闭',
    width: 100,
    key: 'status',
},{
    title: '类型, 有链接的,无链接的',
    width: 100,
    key: 'type',
},{
    title: '父 id',
    width: 100,
    key: 'parentId',
},{
    title: '排序字段',
    width: 100,
    key: 'sort',
},{
    title: '产生时间',
    width: 100,
    key: 'createTime',
},{
    title: '更新时间',
    width: 100,
    key: 'updateTime',
}


id
icon
显示的名字
前端url
状态,打开或者关闭
类型, 有链接的,无链接的
父 id
排序字段
产生时间
更新时间


id
icon
name
url
status
type
parent_id
sort
create_time
update_time


id
icon
name
url
status
type
parentId
sort
createTime
updateTime

tableName : t_system_privilege

a.id, a.icon, a.name, a.url, a.status, a.type, a.parent_id, a.sort, a.create_time, a.update_time,


a.id,
a.icon,
a.name,
a.url,
a.status,
a.type,
a.parent_id,
a.sort,
a.create_time,
a.update_time,


// api/api.js 中, 需要生成的代码

  systemPrivilegeFind(query) {
    return this.get('/systemPrivilege/find', query)
  }

  systemPrivilegeFindAll(query) {
    return this.getFindAll('/systemPrivilege/find', query)
  }

  systemPrivilegeAll() {
    return this.getAll('/systemPrivilege/find')
  }

  systemPrivilegeOne(id) {
    return this.getOne('/systemPrivilege/find', id)
  }

  systemPrivilegeAddUpdate(obj, by) {
    return this.postBy('/systemPrivilege/addUpdate', obj, by)
  }

  systemPrivilegeDelete(obj) {
    return this.post('/systemPrivilege/delete', obj)
  }


// router/index.js 中, 需要生成的代码

  {
    path: '/-frontFilePath-/systemPrivilege',
    component: () => import('@/views/-frontFilePath-/systemPrivilege'),
  },


      // 前端代码中详情数据的展示
      <el-descriptions border :column="2">
        <!--<el-descriptions-item label="id">{{ temp.id }}</el-descriptions-item>-->
        <el-descriptions-item label="icon">{{ temp.icon }}</el-descriptions-item>
        <el-descriptions-item label="显示的名字">{{ temp.name }}</el-descriptions-item>
        <el-descriptions-item label="前端url">{{ temp.url }}</el-descriptions-item>
        <el-descriptions-item label="状态,打开或者关闭">{{ temp.status }}</el-descriptions-item>
        <el-descriptions-item label="类型, 有链接的,无链接的">{{ temp.type }}</el-descriptions-item>
        <!--<el-descriptions-item label="父 id">{{ temp.parentId }}</el-descriptions-item>-->
        <el-descriptions-item label="排序字段">{{ temp.sort }}</el-descriptions-item>
        <!--<el-descriptions-item label="产生时间">{{ temp.createTime }}</el-descriptions-item>-->
        <!--<el-descriptions-item label="更新时间">{{ temp.updateTime }}</el-descriptions-item>-->
      </el-descriptions>

      <el-form label-position="left" inline class="demo-table-expand">
        <!--<el-form-item label="id"><span>{{temp.id}}</span></el-form-item>-->
        <el-form-item label="icon"><span>{{temp.icon}}</span></el-form-item>
        <el-form-item label="显示的名字"><span>{{temp.name}}</span></el-form-item>
        <el-form-item label="前端url"><span>{{temp.url}}</span></el-form-item>
        <el-form-item label="状态,打开或者关闭"><span>{{temp.status}}</span></el-form-item>
        <el-form-item label="类型, 有链接的,无链接的"><span>{{temp.type}}</span></el-form-item>
        <!--<el-form-item label="父 id"><span>{{temp.parentId}}</span></el-form-item>-->
        <el-form-item label="排序字段"><span>{{temp.sort}}</span></el-form-item>
        <!--<el-form-item label="产生时间"><span>{{temp.createTime}}</span></el-form-item>-->
        <!--<el-form-item label="更新时间"><span>{{temp.updateTime}}</span></el-form-item>-->
      </el-form>



'icon', '显示的名字', '前端url', '状态,打开或者关闭', '类型, 有链接的,无链接的', '排序字段'

'icon', 'name', 'url', 'status', 'type', 'sort'

| page                | 否 | 整数     | 页码,第几页,编号从 1 开始, 默认第1页
| size                | 否 | 整数     | 每页多少条数据,默认值:1 , 最大1000
| limit               | 否 | 整数     | 每页多少条数据,默认值:1 , 最大1000,与size 一样
| id                  | 否 | 字符串   | id,例如: 1234
| ids                 | 否 | 字符串   | 多个id以逗号分隔,例如: 1234,2345
| parentId            | 否 | 字符串   | 父 id-多个以逗号分割
| startTime           | 否 | 日期时间 | 开始时间,例如 : 2017-01-01 12:13:14 </br> 或者 例如 : 2017-01-01
| endTime             | 否 | 日期时间 | 结束时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| all                 | 否 | 字符串   | 分页状态下,查询出全部数据,相当于page=1,size=2000
| _all                | 否 | 字符串   | 查询全部的原始数据,小心使用,相当于page=1,size=20000,_raw=_raw
| _one                | 否 | 字符串   | 查询出一条数据,相当于page=1,size=1,返回对象,不是数组
| _raw                | 否 | 字符串   | 原始数据查询,查询原始表数据,不附带其他,数据结构与表对应起来
| createTimeFrom      | 否 | 日期时间 | 产生时间的开始时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| createTimeTo        | 否 | 日期时间 | 产生时间的结束时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| updateTimeFrom      | 否 | 日期时间 | 更新时间的开始时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| updateTimeTo        | 否 | 日期时间 | 更新时间的结束时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02

| id                  | 是 | 字符串   | id</br>***最大长度:32***
| icon                | 是 | 字符串   | icon</br>***最大长度:64***
| name                | 是 | 字符串   | 显示的名字</br>***最大长度:64***
| url                 | 否 | 字符串   | 前端url</br>***最大长度:128***
| status              | 是 | 字符串   | 状态,打开或者关闭</br>***最大长度:16***
| type                | 是 | 字符串   | 类型, 有链接的,无链接的</br>***最大长度:16***
| parentId            | 否 | 字符串   | 父 id</br>***最大长度:32***
| sort                | 是 | 整数     | 排序字段</br>***整数最大长度:20***</br>***小数最大长度:0***
| createTime          | 是 | 日期时间 | 产生时间</br>格式 : yyyy-MM-dd HH:mm:ss </br> 例如 : 2013-05-09 12:13:14
| updateTime          | 是 | 日期时间 | 更新时间</br>格式 : yyyy-MM-dd HH:mm:ss </br> 例如 : 2013-05-09 12:13:14


    // TODO: controller 通用模板
    // TODO: controller 通用模板
    // TODO: controller 通用模板
    @GetMapping("info")
    public ReturnData info(
            @RequestParam(name = "icon", required = false) String icon,
            @RequestParam(name = "name", required = false) String name,
            @RequestParam(name = "url", required = false) String url,
            @RequestParam(name = "status", required = false) String status,
            @RequestParam(name = "type", required = false) String type,
            @RequestParam(name = "parentId", required = false) String parentId,
            @RequestParam(name = "sort", required = false) Long sort
    ) throws Exception {
        List<SystemPrivilegeEntity> list = systemPrivilegeService.findByInfo(
                icon,
                name,
                url,
                status,
                type,
                parentId,
                sort
        );
        return ok(list);
    }

    @GetMapping("infoOne")
    public ReturnData infoOne(
            @RequestParam(name = "icon", required = false) String icon,
            @RequestParam(name = "name", required = false) String name,
            @RequestParam(name = "url", required = false) String url,
            @RequestParam(name = "status", required = false) String status,
            @RequestParam(name = "type", required = false) String type,
            @RequestParam(name = "parentId", required = false) String parentId,
            @RequestParam(name = "sort", required = false) Long sort
    ) throws Exception {
        SystemPrivilegeEntity one = systemPrivilegeService.findOneByInfo(
                icon,
                name,
                url,
                status,
                type,
                parentId,
                sort
        );
        return ok(one);
    }


    // TODO: service 通用模板
    // TODO: service 通用模板
    // TODO: service 通用模板
    public int updateByInfo(
            String id,
            String icon,
            String name,
            String url,
            String status,
            String type,
            String parentId,
            Long sort
    ) {
        return systemPrivilegeMapper.updateByInfo(
                id,
                icon,
                name,
                url,
                status,
                type,
                parentId,
                sort
        );
    }

    public List<SystemPrivilegeEntity> findByInfo(
            String icon,
            String name,
            String url,
            String status,
            String type,
            String parentId,
            Long sort
    ) {
        List<SystemPrivilegeEntity> list = systemPrivilegeMapper.findByInfo(
                icon,
                name,
                url,
                status,
                type,
                parentId,
                sort
        );
        return list;
    }

    public SystemPrivilegeEntity findOneByInfo(
            String icon,
            String name,
            String url,
            String status,
            String type,
            String parentId,
            Long sort
    ) {
        SystemPrivilegeEntity one = systemPrivilegeMapper.findOneByInfo(
                icon,
                name,
                url,
                status,
                type,
                parentId,
                sort
        );
        return one;
    }


    // TODO: mapper 通用模板
    // TODO: mapper 通用模板
    // TODO: mapper 通用模板
    @Update(" update t_system_privilege set" +
            " icon = #{icon}, name = #{name}, url = #{url}, status = #{status}, type = #{type}, parent_id = #{parentId}," +
            " sort = #{sort}, update_time = now()" +
            " where id = #{id}")
    int updateByInfo(@Param("id") String id,
                     @Param("icon") String icon,
                     @Param("name") String name,
                     @Param("url") String url,
                     @Param("status") String status,
                     @Param("type") String type,
                     @Param("parentId") String parentId,
                     @Param("sort") Long sort);

    @Select("SELECT a.* FROM t_system_privilege a" +
            " WHERE a.icon = #{icon}" +
            " AND a.name = #{name}" +
            " AND a.url = #{url}" +
            " AND a.status = #{status}" +
            " AND a.type = #{type}" +
            " AND a.parent_id = #{parentId}" +
            " AND a.sort = #{sort}" +
            " order by a.id desc LIMIT 10000")
    List<SystemPrivilegeEntity> findByInfo(@Param("icon") String icon,
                                           @Param("name") String name,
                                           @Param("url") String url,
                                           @Param("status") String status,
                                           @Param("type") String type,
                                           @Param("parentId") String parentId,
                                           @Param("sort") Long sort);

    @Select("SELECT a.* FROM t_system_privilege a" +
            " WHERE a.icon = #{icon}" +
            " AND a.name = #{name}" +
            " AND a.url = #{url}" +
            " AND a.status = #{status}" +
            " AND a.type = #{type}" +
            " AND a.parent_id = #{parentId}" +
            " AND a.sort = #{sort}" +
            " order by a.id desc LIMIT 1")
    SystemPrivilegeEntity findOneByInfo(@Param("icon") String icon,
                                        @Param("name") String name,
                                        @Param("url") String url,
                                        @Param("status") String status,
                                        @Param("type") String type,
                                        @Param("parentId") String parentId,
                                        @Param("sort") Long sort);
