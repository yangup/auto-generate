{
    "id": "id",
    "depositeBankCode": "depositeBankCode",
    "depositeCardNo": "depositeCardNo",
    "billAmount": "billAmount",
    "transactionTime": "transactionTime",
    "cardNoSuffix": "cardNoSuffix",
    "accountHolder": "accountHolder",
    "infoUrl": "infoUrl",
    "status": "status",
    "createTime": "createTime",
    "updateTime": "updateTime"
}


@RequestParam(name = "id", required = false) String id,
@RequestParam(name = "depositeBankCode", required = false) String depositeBankCode,
@RequestParam(name = "depositeCardNo", required = false) String depositeCardNo,
@RequestParam(name = "billAmount", required = false) BigDecimal billAmount,
@RequestParam(name = "transactionTime", required = false) LocalDateTime transactionTime,
@RequestParam(name = "cardNoSuffix", required = false) String cardNoSuffix,
@RequestParam(name = "accountHolder", required = false) String accountHolder,
@RequestParam(name = "infoUrl", required = false) String infoUrl,
@RequestParam(name = "status", required = false) String status,
@RequestParam(name = "createTime", required = false) LocalDateTime createTime,
@RequestParam(name = "updateTime", required = false) LocalDateTime updateTime


{
    title: '主键ID',
    key: 'id',
},{
    title: '收款卡,银行卡开户行编码（例如：KTB等）',
    key: 'depositeBankCode',
},{
    title: '收款卡,银行卡号',
    key: 'depositeCardNo',
},{
    title: '收款金额',
    key: 'billAmount',
},{
    title: '交易时间',
    key: 'transactionTime',
},{
    title: '银行卡号,后缀',
    key: 'cardNoSuffix',
},{
    title: '入账人',
    key: 'accountHolder',
},{
    title: '图片 url',
    key: 'infoUrl',
},{
    title: '状态',
    key: 'status',
},{
    title: '数据插入时间',
    key: 'createTime',
},{
    title: '最后更新时间',
    key: 'updateTime',
}


{
    title: '主键ID',
    width: 100,
    key: 'id',
},{
    title: '收款卡,银行卡开户行编码（例如：KTB等）',
    width: 100,
    key: 'depositeBankCode',
},{
    title: '收款卡,银行卡号',
    width: 100,
    key: 'depositeCardNo',
},{
    title: '收款金额',
    width: 100,
    key: 'billAmount',
},{
    title: '交易时间',
    width: 100,
    key: 'transactionTime',
},{
    title: '银行卡号,后缀',
    width: 100,
    key: 'cardNoSuffix',
},{
    title: '入账人',
    width: 100,
    key: 'accountHolder',
},{
    title: '图片 url',
    width: 100,
    key: 'infoUrl',
},{
    title: '状态',
    width: 100,
    key: 'status',
},{
    title: '数据插入时间',
    width: 100,
    key: 'createTime',
},{
    title: '最后更新时间',
    width: 100,
    key: 'updateTime',
}


主键ID
收款卡,银行卡开户行编码（例如：KTB等）
收款卡,银行卡号
收款金额
交易时间
银行卡号,后缀
入账人
图片 url
状态
数据插入时间
最后更新时间


id
deposite_bank_code
deposite_card_no
bill_amount
transaction_time
card_no_suffix
account_holder
info_url
status
create_time
update_time


id
depositeBankCode
depositeCardNo
billAmount
transactionTime
cardNoSuffix
accountHolder
infoUrl
status
createTime
updateTime

tableName : tb_deposite_bank_statement

a.id, a.deposite_bank_code, a.deposite_card_no, a.bill_amount, a.transaction_time, a.card_no_suffix, a.account_holder, a.info_url, a.status, a.create_time, a.update_time,


a.id,
a.deposite_bank_code,
a.deposite_card_no,
a.bill_amount,
a.transaction_time,
a.card_no_suffix,
a.account_holder,
a.info_url,
a.status,
a.create_time,
a.update_time,


// api/api.js 中, 需要生成的代码

  depositeBankStatementFind(query) {
    return this.get('/depositeBankStatement/find', query)
  }

  depositeBankStatementFindAll(query) {
    return this.getFindAll('/depositeBankStatement/find', query)
  }

  depositeBankStatementAll() {
    return this.getAll('/depositeBankStatement/find')
  }

  depositeBankStatementOne(id) {
    return this.getOne('/depositeBankStatement/find', id)
  }

  depositeBankStatementAddUpdate(obj, by) {
    return this.postBy('/depositeBankStatement/addUpdate', obj, by)
  }

  depositeBankStatementDelete(obj) {
    return this.post('/depositeBankStatement/delete', obj)
  }


// router/index.js 中, 需要生成的代码

  {
    path: '/-frontFilePath-/depositeBankStatement',
    component: () => import('@/views/-frontFilePath-/depositeBankStatement'),
  },


      // 前端代码中详情数据的展示
      <el-descriptions border :column="2">
        <!--<el-descriptions-item label="主键ID">{{ temp.id }}</el-descriptions-item>-->
        <el-descriptions-item label="收款卡,银行卡开户行编码（例如：KTB等）">{{ temp.depositeBankCode }}</el-descriptions-item>
        <el-descriptions-item label="收款卡,银行卡号">{{ temp.depositeCardNo }}</el-descriptions-item>
        <el-descriptions-item label="收款金额">{{ temp.billAmount }}</el-descriptions-item>
        <el-descriptions-item label="交易时间">{{ temp.transactionTime }}</el-descriptions-item>
        <el-descriptions-item label="银行卡号,后缀">{{ temp.cardNoSuffix }}</el-descriptions-item>
        <el-descriptions-item label="入账人">{{ temp.accountHolder }}</el-descriptions-item>
        <el-descriptions-item label="图片 url">{{ temp.infoUrl }}</el-descriptions-item>
        <el-descriptions-item label="状态">{{ temp.status }}</el-descriptions-item>
        <!--<el-descriptions-item label="数据插入时间">{{ temp.createTime }}</el-descriptions-item>-->
        <!--<el-descriptions-item label="最后更新时间">{{ temp.updateTime }}</el-descriptions-item>-->
      </el-descriptions>

      <el-form label-position="left" inline class="demo-table-expand">
        <!--<el-form-item label="主键ID"><span>{{temp.id}}</span></el-form-item>-->
        <el-form-item label="收款卡,银行卡开户行编码（例如：KTB等）"><span>{{temp.depositeBankCode}}</span></el-form-item>
        <el-form-item label="收款卡,银行卡号"><span>{{temp.depositeCardNo}}</span></el-form-item>
        <el-form-item label="收款金额"><span>{{temp.billAmount}}</span></el-form-item>
        <el-form-item label="交易时间"><span>{{temp.transactionTime}}</span></el-form-item>
        <el-form-item label="银行卡号,后缀"><span>{{temp.cardNoSuffix}}</span></el-form-item>
        <el-form-item label="入账人"><span>{{temp.accountHolder}}</span></el-form-item>
        <el-form-item label="图片 url"><span>{{temp.infoUrl}}</span></el-form-item>
        <el-form-item label="状态"><span>{{temp.status}}</span></el-form-item>
        <!--<el-form-item label="数据插入时间"><span>{{temp.createTime}}</span></el-form-item>-->
        <!--<el-form-item label="最后更新时间"><span>{{temp.updateTime}}</span></el-form-item>-->
      </el-form>


export const DEPOSITE_BANK_STATEMENT_STATUS = {
  CREATED: '新产生',
  DONE: '收款完成',
  DEPRECATED: '废弃',
}

'收款卡,银行卡开户行编码（例如：KTB等）', '收款卡,银行卡号', '收款金额', '交易时间', '银行卡号,后缀', '入账人', '图片 url', '状态'

'depositeBankCode', 'depositeCardNo', 'billAmount', 'transactionTime', 'cardNoSuffix', 'accountHolder', 'infoUrl', ['status', DEPOSITE_BANK_STATEMENT_STATUS]

| page                | 否 | 整数     | 页码,第几页,编号从 1 开始, 默认第1页
| size                | 否 | 整数     | 每页多少条数据,默认值:1 , 最大1000
| limit               | 否 | 整数     | 每页多少条数据,默认值:1 , 最大1000,与size 一样
| id                  | 否 | 字符串   | id,例如: 1234
| ids                 | 否 | 字符串   | 多个id以逗号分隔,例如: 1234,2345
| status              | 否 | 字符串   | 状态-多个以逗号分割</br>CREATED : 新产生</br>DONE : 收款完成</br>DEPRECATED : 废弃</br>
| startTime           | 否 | 日期时间 | 开始时间,例如 : 2017-01-01 12:13:14 </br> 或者 例如 : 2017-01-01
| endTime             | 否 | 日期时间 | 结束时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| all                 | 否 | 字符串   | 分页状态下,查询出全部数据,相当于page=1,size=2000
| _all                | 否 | 字符串   | 查询全部的原始数据,小心使用,相当于page=1,size=20000,_raw=_raw
| _one                | 否 | 字符串   | 查询出一条数据,相当于page=1,size=1,返回对象,不是数组
| _raw                | 否 | 字符串   | 原始数据查询,查询原始表数据,不附带其他,数据结构与表对应起来
| createTimeFrom      | 否 | 日期时间 | 产生时间的开始时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| createTimeTo        | 否 | 日期时间 | 产生时间的结束时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| updateTimeFrom      | 否 | 日期时间 | 更新时间的开始时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02
| updateTimeTo        | 否 | 日期时间 | 更新时间的结束时间,例如 : 2023-01-02 12:13:14 </br> 或者 例如 : 2023-01-02

| id                  | 是 | 字符串   | 主键ID</br>***最大长度:32***
| depositeBankCode    | 是 | 字符串   | 收款卡,银行卡开户行编码（例如：KTB等）</br>***最大长度:32***
| depositeCardNo      | 是 | 字符串   | 收款卡,银行卡号</br>***最大长度:64***
| billAmount          | 是 | 浮点数   | 收款金额</br>***整数最大长度:10***</br>***小数最大长度:5***
| transactionTime     | 否 | 日期时间 | 交易时间</br>格式 : yyyy-MM-dd HH:mm:ss </br> 例如 : 2013-05-09 12:13:14
| cardNoSuffix        | 否 | 字符串   | 银行卡号,后缀</br>***最大长度:64***
| accountHolder       | 是 | 字符串   | 入账人</br>***最大长度:128***
| infoUrl             | 是 | 字符串   | 图片 url</br>***最大长度:128***
| status              | 是 | 字符串   | 状态</br>CREATED : 新产生</br>DONE : 收款完成</br>DEPRECATED : 废弃</br>***最大长度:32***
| createTime          | 是 | 日期时间 | 数据插入时间</br>格式 : yyyy-MM-dd HH:mm:ss </br> 例如 : 2013-05-09 12:13:14
| updateTime          | 是 | 日期时间 | 最后更新时间</br>格式 : yyyy-MM-dd HH:mm:ss </br> 例如 : 2013-05-09 12:13:14


    // TODO: controller 通用模板
    // TODO: controller 通用模板
    // TODO: controller 通用模板
    @GetMapping("info")
    public ReturnData info(
            @RequestParam(name = "depositeBankCode", required = false) String depositeBankCode,
            @RequestParam(name = "depositeCardNo", required = false) String depositeCardNo,
            @RequestParam(name = "billAmount", required = false) BigDecimal billAmount,
            @RequestParam(name = "transactionTime", required = false) LocalDateTime transactionTime,
            @RequestParam(name = "cardNoSuffix", required = false) String cardNoSuffix,
            @RequestParam(name = "accountHolder", required = false) String accountHolder,
            @RequestParam(name = "infoUrl", required = false) String infoUrl,
            @RequestParam(name = "status", required = false) String status
    ) throws Exception {
        List<DepositeBankStatementEntity> list = depositeBankStatementService.findByInfo(
                depositeBankCode,
                depositeCardNo,
                billAmount,
                transactionTime,
                cardNoSuffix,
                accountHolder,
                infoUrl,
                status
        );
        return ok(list);
    }

    @GetMapping("infoOne")
    public ReturnData infoOne(
            @RequestParam(name = "depositeBankCode", required = false) String depositeBankCode,
            @RequestParam(name = "depositeCardNo", required = false) String depositeCardNo,
            @RequestParam(name = "billAmount", required = false) BigDecimal billAmount,
            @RequestParam(name = "transactionTime", required = false) LocalDateTime transactionTime,
            @RequestParam(name = "cardNoSuffix", required = false) String cardNoSuffix,
            @RequestParam(name = "accountHolder", required = false) String accountHolder,
            @RequestParam(name = "infoUrl", required = false) String infoUrl,
            @RequestParam(name = "status", required = false) String status
    ) throws Exception {
        DepositeBankStatementEntity one = depositeBankStatementService.findOneByInfo(
                depositeBankCode,
                depositeCardNo,
                billAmount,
                transactionTime,
                cardNoSuffix,
                accountHolder,
                infoUrl,
                status
        );
        return ok(one);
    }


    // TODO: service 通用模板
    // TODO: service 通用模板
    // TODO: service 通用模板
    public int updateByInfo(
            String id,
            String depositeBankCode,
            String depositeCardNo,
            BigDecimal billAmount,
            LocalDateTime transactionTime,
            String cardNoSuffix,
            String accountHolder,
            String infoUrl,
            String status
    ) {
        return depositeBankStatementMapper.updateByInfo(
                id,
                depositeBankCode,
                depositeCardNo,
                billAmount,
                transactionTime,
                cardNoSuffix,
                accountHolder,
                infoUrl,
                status
        );
    }

    public List<DepositeBankStatementEntity> findByInfo(
            String depositeBankCode,
            String depositeCardNo,
            BigDecimal billAmount,
            LocalDateTime transactionTime,
            String cardNoSuffix,
            String accountHolder,
            String infoUrl,
            String status
    ) {
        List<DepositeBankStatementEntity> list = depositeBankStatementMapper.findByInfo(
                depositeBankCode,
                depositeCardNo,
                billAmount,
                transactionTime,
                cardNoSuffix,
                accountHolder,
                infoUrl,
                status
        );
        return list;
    }

    public DepositeBankStatementEntity findOneByInfo(
            String depositeBankCode,
            String depositeCardNo,
            BigDecimal billAmount,
            LocalDateTime transactionTime,
            String cardNoSuffix,
            String accountHolder,
            String infoUrl,
            String status
    ) {
        DepositeBankStatementEntity one = depositeBankStatementMapper.findOneByInfo(
                depositeBankCode,
                depositeCardNo,
                billAmount,
                transactionTime,
                cardNoSuffix,
                accountHolder,
                infoUrl,
                status
        );
        return one;
    }


    // TODO: mapper 通用模板
    // TODO: mapper 通用模板
    // TODO: mapper 通用模板
    @Update(" update tb_deposite_bank_statement set" +
            " deposite_bank_code = #{depositeBankCode}, deposite_card_no = #{depositeCardNo}, bill_amount = #{billAmount}," +
            " transaction_time = #{transactionTime}, card_no_suffix = #{cardNoSuffix}, account_holder = #{accountHolder}, info_url = #{infoUrl}," +
            " status = #{status}, update_time = now()" +
            " where id = #{id}")
    int updateByInfo(@Param("id") String id,
                     @Param("depositeBankCode") String depositeBankCode,
                     @Param("depositeCardNo") String depositeCardNo,
                     @Param("billAmount") BigDecimal billAmount,
                     @Param("transactionTime") LocalDateTime transactionTime,
                     @Param("cardNoSuffix") String cardNoSuffix,
                     @Param("accountHolder") String accountHolder,
                     @Param("infoUrl") String infoUrl,
                     @Param("status") String status);

    @Select("SELECT a.* FROM tb_deposite_bank_statement a" +
            " WHERE a.deposite_bank_code = #{depositeBankCode}" +
            " AND a.deposite_card_no = #{depositeCardNo}" +
            " AND a.bill_amount = #{billAmount}" +
            " AND a.transaction_time = #{transactionTime}" +
            " AND a.card_no_suffix = #{cardNoSuffix}" +
            " AND a.account_holder = #{accountHolder}" +
            " AND a.info_url = #{infoUrl}" +
            " AND a.status = #{status}" +
            " order by a.id desc LIMIT 10000")
    List<DepositeBankStatementEntity> findByInfo(@Param("depositeBankCode") String depositeBankCode,
                                                 @Param("depositeCardNo") String depositeCardNo,
                                                 @Param("billAmount") BigDecimal billAmount,
                                                 @Param("transactionTime") LocalDateTime transactionTime,
                                                 @Param("cardNoSuffix") String cardNoSuffix,
                                                 @Param("accountHolder") String accountHolder,
                                                 @Param("infoUrl") String infoUrl,
                                                 @Param("status") String status);

    @Select("SELECT a.* FROM tb_deposite_bank_statement a" +
            " WHERE a.deposite_bank_code = #{depositeBankCode}" +
            " AND a.deposite_card_no = #{depositeCardNo}" +
            " AND a.bill_amount = #{billAmount}" +
            " AND a.transaction_time = #{transactionTime}" +
            " AND a.card_no_suffix = #{cardNoSuffix}" +
            " AND a.account_holder = #{accountHolder}" +
            " AND a.info_url = #{infoUrl}" +
            " AND a.status = #{status}" +
            " order by a.id desc LIMIT 1")
    DepositeBankStatementEntity findOneByInfo(@Param("depositeBankCode") String depositeBankCode,
                                              @Param("depositeCardNo") String depositeCardNo,
                                              @Param("billAmount") BigDecimal billAmount,
                                              @Param("transactionTime") LocalDateTime transactionTime,
                                              @Param("cardNoSuffix") String cardNoSuffix,
                                              @Param("accountHolder") String accountHolder,
                                              @Param("infoUrl") String infoUrl,
                                              @Param("status") String status);
