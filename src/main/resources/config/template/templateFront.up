<template>
  <div class="app-container">
    <div class="filter-div">
      <el-card>
        <filter-date-range :start-time.sync="query.startTime" :end-time.sync="query.endTime"/>
        -filterAll-
        <el-button class="item" type="primary" icon="el-icon-search" @click="getPage(true)">查询</el-button>
        <el-button class="item" type="success" icon="el-icon-edit" @click="handleAddUpdateDialog()">添加</el-button>
      </el-card>
    </div>

    <div class="table-div">
      <el-table v-loading="listLoading" :data="list" class="table-container" max-height="647" stripe>
        -startElTableColumn-
        <el-table-column fixed="right" label="操作" min-width="100">
          <template v-slot="{row}">
            <el-button type="text" icon="el-icon-edit" @click="handleAddUpdateDialog(row)">编辑</el-button>
            <el-button type="text" icon="el-icon-delete" @click="doDelete(row)">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <pagination :total="total" :page.sync="query.page" :limit.sync="query.limit" @pagination="getPage()"/>
    </div>

    <!--添加或者修改-->
    <vue-dialog :visible.sync="dialogFormVisible" :title="dialogType" :ok="doAddUpdateCheck" width="50%" top="-frontTop-vh">
      <el-form ref="dataForm" :model="temp" :rules="rules" label-position="right" label-width="10em" class="ml2mr3">
        -startElFormItem-
      </el-form>
    </vue-dialog>

  </div>
</template>

<script>
import api from '@/api/api'
import { success, cancel, confirm, deleteSuccess } from '@/utils/message'
import { getLimit } from '@/utils/user'
import mixins from '@/mixins'

export default {
  mixins: [mixins],
  data() {
    return {
      query: {
        page: 1,
        limit: getLimit(),
        startTime: undefined,
        endTime: undefined,
        -queryParam-
      },
      temp: {
        -startTemp-
      },
      rules: {
        -startRules-
      },
    }
  },
  methods: {
    init() {
    },
    doPage() {
      api.-tableNameJavaParam-Find(this.query).then(res => {
        this.list = res.data
        this.total = res.total
        this.listLoading = false
      })
    },
    doAddUpdate() {
      api.-tableNameJavaParam-AddUpdate(this.temp).then(res => {
        success()
        this.dialogFormVisible = false
        this.getPage(true)
      })
    },
    doDelete(row) {
      confirm('此操作将删除 : ' + row.-firstNoIdParam- + ' , 是否继续删除?').then(() => {
        api.-tableNameJavaParam-Delete(row).then(res => {
          deleteSuccess('删除成功')
          this.getPage(true)
        })
      }).catch(() => {
        cancel()
      })
    },

  },
}
</script>
