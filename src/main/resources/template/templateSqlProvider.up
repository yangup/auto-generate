package -packageSqlProvider-;

import com.platform.common.common.BaseSqlProvider;
import com.platform.common.common.QueryMap;
import com.platform.common.util.sql.StringSql;

import java.util.List;
import java.util.Map;

/**
 * -tableComment-
 * -tableNameJava-
 *
 * @author -author-
 */
public class -tableNameJava-SqlProvider extends BaseSqlProvider {

    public String find(Map<String, Object> params) {
        QueryMap queryMap = (QueryMap) params.get(QUERY_MAP);
        queryMap = QueryMap.ofNotNULL(queryMap);

        StringSql sql = StringSql.of("select a.*");
        sql.append("FROM -tableName- a", true);
        sql.whereIsNotNULL("a.id", inComma(queryMap.id()));
        sql.whereIsNotNULL("a.id", inComma(queryMap.ids()));
        -queryMapParam-
        sql.whereIsNotNULL("a.create_time >=", str(queryMap.createTimeFrom()));
        sql.whereIsNotNULL("a.create_time <", str(queryMap.createTimeTo()));
        sql.whereIsNotNULL("a.update_time >=", str(queryMap.updateTimeFrom()));
        sql.whereIsNotNULL("a.update_time <", str(queryMap.updateTimeTo()));
        sql.whereIsNotNULL("a.create_time >=", str(queryMap.startTime()));
        sql.whereIsNotNULL("a.create_time <", str(queryMap.endTime()));
        sql.append("order by a.create_time desc");
        return sql.toString();
    }

    @SuppressWarnings("unchecked")
    public String findByIds(Map<String, Object> params) {
        List<String> ids = (List<String>) params.get("ids");

        StringSql sql = StringSql.of("select a.*");
        sql.append("FROM -tableName- a", true);
        sql.appendWhere("a.id", ins(ids));
        sql.append("order by a.create_time desc");
        return sql.toString();
    }

}
